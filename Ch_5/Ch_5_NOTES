This chapter covers optimization. 
    This topic is addressed by discussing the following: 

    - Data transfers, which can be broken down into two main categories: 
         - optimizing data transfers between host and device memories. 
         - optimizing data transfers between different memories on the device. 
     
     Also covered in this chapter factors involved in deciding how to choose execution 
        configurations with the aim towards efficient hardware utilization.  
    
     Instructional optimizations are also covered. 


Some compiler options for optimization:

(see file compiler_ex.cuf in repo for notes on on options and instruction references in the generated ptx files)

-gpu=keep   fuses multiply and add instructions
for the module below,

e.g. 
    module m
    contains
        attributes(global) subroutine k(a, b, c) 
            real :: a, b, c 
            c = a*b+c 
        end subroutine k 
    end module m 

**************************
Terms: 


warp - threads in a thread block partitioned into groups of 32 threads.

local memory - named this way due to its scope being local to the thread
                (not to its physical location).
